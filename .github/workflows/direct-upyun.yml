# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy directly uploading to UPyun

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    environment: GithubAction
    env:
      TMP_DIR: public
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: MV DIR
        run: |
          mkdir ${{ runner.temp }}/public
          rsync -av --exclude='.*' --exclude='public' /home/runner/work/ukaccn/ukaccn/* ${{ runner.temp }}/public
  # Deployment job
      - name: deploy-to-upyun
        env:
          UPX_SERVICENAME: ${{ secrets.UPX_SERVICENAME }}
          UPX_OPERATOR: ${{ secrets.UPX_OPERATOR }}
          UPX_PASSWORD: ${{ secrets.UPX_PASSWORD }}
          LOCAL_DIR: ${{ runner.temp }}/public
          REMOTE_DIR: /
        run: |
          wget https://github.com/upyun/upx/releases/download/v0.4.8/upx_0.4.8_linux_amd64.tar.gz || { echo "Download failed"; exit 1; }
          tar -xvf upx_0.4.8_linux_amd64.tar.gz || { echo "Extracting failed"; exit 1; }
          chmod +x ./upx || { echo "Permission setting failed"; exit 1; }
          echo "${UPX_OPERATOR} is operating"
          ./upx login ${UPX_SERVICENAME} ${UPX_OPERATOR} ${UPX_PASSWORD}
          ./upx sync --delete ${LOCAL_DIR} ${REMOTE_DIR} -v
          echo 'Finished.'
